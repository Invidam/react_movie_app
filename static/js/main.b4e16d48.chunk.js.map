{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movie","rank","year","id","title","rating","summary","poster","genres","className","src","alt","slice","length","toFixed","map","genre","idx","prototype","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","getMovies","a","axios","get","movies","data","console","log","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAKA,SAASA,EAAT,GAA4E,IAA3DC,EAA0D,EAA1DA,KAAUC,GAAgD,EAApDC,GAAoD,EAAhDD,MAAME,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/D,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKC,IAAKH,EAAQE,UAAU,eAAeE,IAAI,WAC/C,sBAAKF,UAAU,iBAAf,UACE,qBAAIA,UAAU,cAAd,UACE,uBAAMA,UAAU,mBAAhB,UAAoCR,EAApC,QACCG,EACD,uBAAMK,UAAU,mBAAhB,cAAqCP,EAArC,UAEF,oBAAGO,UAAU,gBAAb,UACG,IADH,UAEMH,EAAQM,MAAM,EAAG,KAFvB,aAEgCN,EAAQO,OAAS,IAAM,GAAK,UAE5D,oBAAGJ,UAAU,eAAb,UACG,IACD,sBAAMA,UAAU,oBAAhB,qBACEJ,EAAS,GAAGS,QAAQ,GAHxB,YAKA,oBAAIL,UAAU,eAAd,SACGD,EAAOO,KAAI,SAACC,EAAOC,GAClB,OACE,oBAAIR,UAAU,cAAd,SACGO,GAD8BC,cAa/CjB,EAAMkB,UAAY,CAChBf,GAAIgB,IAAUC,OAAOC,WACrBpB,KAAMkB,IAAUC,OAChBlB,KAAMiB,IAAUC,OAAOC,WACvBhB,OAAQc,IAAUC,OAAOC,WACzBjB,MAAOe,IAAUG,OAAOD,WACxBf,QAASa,IAAUG,OAAOD,WAC1Bd,OAAQY,IAAUG,OAAOD,WACzBb,OAAQW,IAAUI,QAAQJ,IAAUG,QAAQD,YAG/BrB,QCGAwB,G,kNAhDbC,MAAQ,CACNC,WAAW,G,EAEbC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yEANQ,uBAGEC,EAHF,EAERC,KACEA,KAAQD,OAKZE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAAEJ,SAAQL,WAAW,IATzB,kBAUHK,GAVG,2C,uDAYZ,WACEK,KAAKT,c,oBAEP,WACE,MAA8BS,KAAKX,MAA3BC,EAAR,EAAQA,UAAWK,EAAnB,EAAmBA,OACnB,OACE,yBAAStB,UAAU,YAAnB,SACGiB,EACC,qBAAKjB,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,6BAGF,qBAAKA,UAAU,SAAf,SACGsB,EAAOhB,KAAI,SAACsB,EAAOpB,GAAR,OACV,cAAC,EAAD,CAEEhB,KAAMgB,EAAM,EACZd,GAAIkC,EAAMlC,GACVE,OAAQgC,EAAMhC,OACdH,KAAMmC,EAAMnC,KACZE,MAAOiC,EAAMjC,MACbE,QAAS+B,EAAM/B,QACfC,OAAQ8B,EAAMC,mBACd9B,OAAQ6B,EAAM7B,QART6B,EAAMlC,e,GA/BToC,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b4e16d48.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import axios from \"axios\";\nimport \"./Movie.css\";\n\nfunction Movie({ rank, id, year, title, rating, summary, poster, genres }) {\n  return (\n    <div className=\"movies_movie\">\n      <img src={poster} className=\"movie_poster\" alt=\"poster\" />\n      <div className=\"movie_contents\">\n        <h2 className=\"movie_title\">\n          <span className=\"movie_title_rank\">{rank}. </span>\n          {title}\n          <span className=\"movie_title_year\">({year})</span>\n        </h2>\n        <p className=\"movie_summary\">\n          {\" \"}\n          {`${summary.slice(0, 220)}  ${summary.length < 220 ? \"\" : \"...\"}`}\n        </p>\n        <p className=\"movie_rating\">\n          {\" \"}\n          <span className=\"movie_rating-star\">‚≠ê</span>\n          {(rating / 2).toFixed(1)} / 5.0\n        </p>\n        <ul className=\"movie_genres\">\n          {genres.map((genre, idx) => {\n            return (\n              <li className=\"movie_genre\" key={idx}>\n                {genre}\n              </li>\n            );\n          })}\n        </ul>\n        {/* <h3 className=\"movie_title\"> {title}</h3>\n      <h3 className=\"movie_title\"> {title}</h3> */}\n      </div>\n    </div>\n  );\n}\n\nMovie.prototype = {\n  id: PropTypes.number.isRequired,\n  rank: PropTypes.number,\n  year: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movies.js\";\nimport \"./App.css\";\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\n    );\n    console.log(movies);\n    this.setState({ movies, isLoading: false });\n    return movies;\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading . . .</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie, idx) => (\n              <Movie\n                key={movie.id}\n                rank={idx + 1}\n                id={movie.id}\n                rating={movie.rating}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}